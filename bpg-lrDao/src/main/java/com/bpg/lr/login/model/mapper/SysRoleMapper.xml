<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bpg.lr.login.dao.SysRoleDao">
  <resultMap id="BaseResultMap" type="com.bpg.lr.login.model.SysRole">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, remark, dept_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bpg.lr.login.model.SysRole">
    insert into sys_role (role_id, role_name, remark, 
      dept_id, create_time)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bpg.lr.login.model.SysRole" useGeneratedKeys="true" keyProperty="roleId">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bpg.lr.login.model.SysRole">
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bpg.lr.login.model.SysRole">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  
      <!-- 根据用户获得角色集合 -->
  <select id="findSysRoleByUserInfo" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		from sys_role
		WHERE 
		role_id IN (
		SELECT
			role_id
		FROM
			sys_user_role
		WHERE
			user_id = #{userId}
	)
		
		
  </select> 
  
    
      <!-- 根据获得所有角色 -->
  <select id="getAllSysRole" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		from sys_role where 1 = 1
		
		<if test="roleName != null and roleName !='' ">
				and role_name like CONCAT('%',#{roleName},'%')
	    </if>
		
  </select>
  
  <!-- 批量删除角色 -->
 <delete id="deleteBatchIds" >
    delete from sys_role
    where role_id in
		<foreach item="roleId" collection="array" open="(" separator="," close=")">
			#{roleId}
		</foreach>
  </delete>
  
    <!-- 批量删除角色用户关系 -->
 <delete id="deleteBatchRoleAndUser" >
  delete from sys_user_role where role_id in
		<foreach item="roleId" collection="array" open="(" separator="," close=")">
			#{roleId}
		</foreach>
  </delete>
  
      <!-- 批量删除角色菜单关系 -->
 <delete id="deleteBatchRoleAndMenu" >
   delete from sys_role_menu where role_id in
		<foreach item="roleId" collection="array" open="(" separator="," close=")">
			#{roleId}
		</foreach>
  </delete>
  
</mapper>